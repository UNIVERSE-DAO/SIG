name: Verify SIG1 (BTC)

on:
  workflow_dispatch:

jobs:
  verify-sig1:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install bitcoinjs libraries
        run: npm install bitcoinjs-lib bitcoinjs-message

      - name: Create SIG1 ChM-HASH Signature Report
        run: |
          mkdir -p verify
          REPORT="verify/sig1-hash-verify-report.txt"

          echo "üßæ SIG1 HASH Verification Report" > "$REPORT"
          echo "Generated: $(date -u)" >> "$REPORT"
          echo "" >> "$REPORT"

          for FILE in messages/ChM-*.txt; do
            FILENAME=$(basename "$FILE")
            CHM_ID="${FILENAME%.txt}"
            CHM_HASH=$(grep '^ChM-HASH:' "$FILE" | cut -d':' -f2- | xargs)
            C_HASH=$(grep '^C-HASH:' "$FILE" | cut -d':' -f2- | xargs)

            CHP_FILE=$(find CHP/ -type f -name "CHP-*.chp" -exec sha256sum {} \; | grep "$C_HASH" | awk '{print $2}' || true)

            echo "‚ñ∂ $FILENAME" >> "$REPORT"

            if [ -z "$CHP_FILE" ]; then
              echo "‚ùå No CHP file found with matching C-HASH ($C_HASH)" >> "$REPORT"
              echo "" >> "$REPORT"
              continue
            fi

            SIG1_ADDR=$(awk '/^\[BTC\]/ {found=1; next} found && /^Address:/ {print $2; exit}' "$CHP_FILE")
            if [ -z "$SIG1_ADDR" ]; then
              echo "‚ùå No BTC address in $CHP_FILE" >> "$REPORT"
              echo "" >> "$REPORT"
              continue
            fi

            SIG_FILE="signers/SIG1/SIG1-$FILENAME.sig"
            if [ ! -f "$SIG_FILE" ]; then
              echo "SIG1 ($SIG1_ADDR): ‚ùå Missing signature file ($SIG_FILE)" >> "$REPORT"
              echo "" >> "$REPORT"
              continue
            fi

            SIG=$(cat "$SIG_FILE" | tr -d '\n')

            echo "
            const bitcoinMessage = require('bitcoinjs-message');
            const message = \`${CHM_HASH}\`;
            const signature = \`${SIG}\`;
            const address = \`${SIG1_ADDR}\`;

            try {
              const result = bitcoinMessage.verify(message, address, signature);
              console.log(result ? '‚úÖ Verified ChM-HASH' : '‚ùå Invalid signature');
              process.exit(result ? 0 : 1);
            } catch (e) {
              console.log('‚ùå JS Error: ' + e.message);
              process.exit(1);
            }
            " > verify.js

            if node verify.js; then
              echo "SIG1 ($SIG1_ADDR): ‚úÖ Valid signature of ChM-HASH" >> "$REPORT"
            else
              echo "SIG1 ($SIG1_ADDR): ‚ùå Invalid signature (ChM-HASH)" >> "$REPORT"
            fi

            echo "" >> "$REPORT"
          done

      - name: Commit and push report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # ‚úÖ This is required to push with GITHUB_TOKEN
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}

          git add verify/sig1-hash-verify-report.txt
          git commit -m "üîç Auto-generate SIG1 ChM-HASH verification report" || echo "No changes"
          git push
